title Trip start

User->+tripManager: start trip
tripManager->*+trip: create new trip
note right of trip: member - default[self] (+other?)\n name - ?? can temp name\n index - ??
trip -> -tripManager: return self\n
note right of tripManager:save to tripList\nsave to currentTrip\n

tripManager->+git: commit "start" create
note right of git: the git is history manager & the commit is event of the trip history
git->*+commit"start":create "start"
note right of commit"start": eventType - "start"\ntime - current time\nmember-[member] self default?
commit"start"->-git: return self
destroy commit"start"
git->-tripManager: return "start"\n
tripManager->trip: save "start" to eventList

tripManager->+monitor: init monitor to set mediaObserver
monitor->+mediaObserver: start observing to hook the media like picture, video, etc.
monitor->-tripManager: return observer init result

opt create "route"
note over tripManager, git : create "route" commit
end

tripManager->+routeTracker: start tracking route by local information. & if need, draw route at real time.
tripManager->+monitor: registe timer to save & regenerate commit"route and notice now state is routing
tripManager->-User: show start position to map\ninform current trip & current event
